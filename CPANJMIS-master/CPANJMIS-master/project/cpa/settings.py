"""
Django settings for cpa project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os,sys,platform

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'xf(f&pl7%0%8i50udlx-=&54-hm+m(b1yrtm-&!b_^#8=ci#(*'

# SECURITY WARNING: don't run with debug turned on in production!
if platform.system()=='Linux':
    DEBUG = False
else:
    DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'dev',# my first test app（by wangboyuan）
    'basicdata',
    'account',
    'task',
    'modules',
    'rest_framework',# a restAPI plug from https://github.com/encode/django-rest-framework
    # 'rest_framework.authtoken',

    'guardian',
    'import_export',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cpa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates",],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cpa.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
if platform.system()=='Linux':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'cnpostair',
            'USER': 'cpa_dev',
            'PASSWORD': 'EA7b64vNBeoxu8RdmKfZ6yFv&3NQCwPrxvABMowo7h(3!yuMj3q@sngeKp',
            'HOST': '172.16.16.13',
            'PORT': '3306',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'cnpostair',
            'USER':'cpa_dev',
            'PASSWORD':'EA7b64vNBeoxu8RdmKfZ6yFv&3NQCwPrxvABMowo7h(3!yuMj3q@sngeKp',
            'HOST':'cdb-cs7cw2a1.gz.tencentcdb.com',
            'PORT':'10083',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-Hans' # 从en-us改为zh-Hans

TIME_ZONE = 'Asia/Shanghai' # 从UTC改为Asia/Shanghai

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# 可用python manage.py collectstatic命令把所有静态文件搜集到统一文件夹中
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    # 'PAGE_SIZE': 1 #一次返回多少条信息
}

# sys.path.insert(0,os.path.join(BASE_DIR, 'extra_apps'))

sys.path.insert(0,os.path.join(BASE_DIR, 'apps'))

AUTH_USER_MODEL = 'account.User'


LOGIN_URL = '/test_login'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # this is default
    'guardian.backends.ObjectPermissionBackend',
)
